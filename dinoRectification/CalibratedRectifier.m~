classdef CalibratedRectifier
    
properties

end
    
function [ pml1,pmr2,JL,JR ] = CalibratedRectifier( IL,IR,pml,pmr )
%UNTITLED Summary of this function goes here
%   Detailed explanation goes here

methods 
    addpath( '/home/mbrophy/Software/RectifKitE/' );
    addpath( '/home/mbrophy/ComputerScience/LevelSetsAOS3D/' );
    addpath( '/home/mbrophy/Software/stereoflowlinux' );


    %IL = imread( '/home/mbrophy/ComputerScience/dinoRing/dinoR0002.png' );
    %IR = imread( '/home/mbrophy/ComputerScience/dinoRing/dinoR0003.png' );

    [a,P,numImages] = dinoFileRead( );

    %pml = P{2};
    %pmr = P{3};
    %ml = [0;0];


    % Epipolar geometry
    [F,epil,epir] = fund(pml,pmr);
    % --------------------  RECTIFICATION
    disp('---------------------------------- rectifying...')

    %  rectification without centeriing
    [TL,TR,pml1,pmr1] = rectify(pml,pmr);
    % centering LEFT image
    p = [size(IL,1)/2; size(IL,2)/2; 1];
    px = TL * p;
    dL = p(1:2) - px(1:2)./px(3) ;
    % centering RIGHT image
    p = [size(IR,1)/2; size(IR,2)/2; 1];
    px = TR * p;
    dR = p(1:2) - px(1:2)./px(3) ;

    % vertical diplacement must be the same
    dL(2) = dR(2);
    %  rectification with centering
    [TL,TR,pml1,pmr1] = rectify(pml,pmr,dL,dR);

    disp('---------------------------------- warping...')
    % find the smallest bb containining both images
    bb = mcbb(size(IL),size(IR), TL, TR);

    % warp RGB channels,
    for c = 1:3
        % Warp LEFT
        [JL(:,:,c),bbL,alphaL] = imwarp(IL(:,:,c), TL, 'bilinear', bb);
        % Warp RIGHT
        [JR(:,:,c),bbR,alphaR] = imwarp(IR(:,:,c), TR, 'bilinear', bb);
    end

    % warp tie points
    mlx = p2t(TL,ml);

    shiftrange = [-45:45];
    [bestshiftsL, occlL, bestshiftsR, occlR] = stereoCorrespond(JL, JR, shiftrange);
end

